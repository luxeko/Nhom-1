//// -- LEVEL 1
//// -- Tables and References

// Creating tables
Table users as U {
  id int [pk, increment] // auto-increment
  full_name varchar
  user_name varchar
  password varchar
  telephone varchar
  created_at timestamp
  modifield_at timestamp
    // done 
}
Table user_role as user_role{
   id int [pk, increment] 
   user_id int
   role_id int
   created_at timestamp
   update_at timestamp
}
Table roles as Roles{
  id int [pk, increment] 
  name varchar
  desc_name varchar
  created_at timestamp
  update_at timestamp
}
Table permisson_role as Per_role{
   id int [pk,increment]
   role_id int
   permisson_id int
   created_at int
   update_at int
 }
 Table Permissions as permissions{
   id int [pk,increment]
   name varchar
   desc_name varchar
   created_at timestamp
   update_at timestamp
 }
Table address as Address {
  id int [pk, increment] // auto-increment
  user_id int
  address_line varchar
  city varchar
  postal_code varchar
  telephone varchar
    // done 
}
Ref: Address.user_id - U.id



// Creating references
// You can also define relaionship separately
// > many-to-one; < one-to-many; - one-to-one

//----------------------------------------------//


//// -- Level 3 
//// -- Enum, Indexes

Table category as Category {
  id int [pk, increment]
  name varchar
  created_at datetime [default: `now()`]
  delete_at timestamp
  update_at timestamp
  // done
}
// Indexes: You can define a single or multi-column index 
Table products as Products {
  id int [pk, increment]
  name varchar
  content text
  feature_image varchar
  category_id int
  discount_id int
  user_id int
  price decimal
  status tinyint
  created_at datetime [default: `now()`]
  delete_at timestamp
  update_at timestamp
  // done 
}
Ref: Products.user_id > U.id
Table productImage as prImage{
  id int [pk, increment]
  image varchar
  product_id int
  created_at datetime [default: `now()`]
  update_at timestamp
  delete_at timestamp
  
}
Ref: prImage.product_id - Products.id
Table discount as Discount {
    id int [pk, increment]
    name varchar
    desc varchar
    discount_percent decimal
    active boolean
    created_at datetime [default: `now()`]
    delete_at timestamp
    update_at timestamp
}
Ref: Category.id < Products.category_id
Ref: Discount.id < Products.discount_id


// add to cart 
Table shopping_cart as Shopping_cart{
  id int [pk, increment]
  user_id int
  total_price decimal
  created_at datetime [default: `now()`]
  update_at timestamp

  // done
}
Table cart_items as Cart_items {
  id int [pk, increment]
  shopping_cart_id int
  product_id int
  quantity int
  created_at datetime [default: `now()`]
  update_at timestamp
}
Ref: Shopping_cart.user_id - U.id
Ref: Cart_items.product_id - Products.id
Ref: Cart_items.shopping_cart_id > Shopping_cart.id


// Báº£ng order
//// -- LEVEL 2
//// -- Adding column settings


Ref: order_items.product_id > products.id

Table orders as Orders {
  id int [pk, increment] // primary key
  user_id int [not null, unique]
  total decimal
  payment_id int
  created_at datetime [default: `now()`]
  update_at timestamp
}
Table order_items as Order_items {
   id int [pk, increment] // primary key
   order_id int
   product_id int
   quantity int
   created_at datetime [default: `now()`]
  update_at timestamp
}
Ref: Order_items.order_id < Orders.id
Ref: Orders.user_id - U.id
//----------------------------------------------//

// Payment 
Table payment_details as Payment_details{
   id int [pk, increment] 
   amount decimal
   status varchar
    created_at datetime [default: `now()`]
    update_at timestamp
}
Ref: Payment_details.id - Orders.payment_id

// log after payment
Table log_payment as Log_payment{
  id int [pk, increment] 
  user_id int
  payment_id int
  order_id int
  order_items_id int
}

Ref: Log_payment.user_id > U.id
Ref: Log_payment.payment_id - Payment_details.id
Ref: Log_payment.order_id > Orders.id
Ref: Log_payment.order_items_id > Order_items.id
